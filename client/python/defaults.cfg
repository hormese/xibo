# DO NOT EDIT THIS FILE
# PUT LOCAL CUSTOMISATIONS IN site.cfg or ~/.xibo

[Main]
# Which Scheduler to Use
scheduler=XmdsScheduler

# Which Download Manager to Use
downloader=XiboDownloadManager

# Should the client run in USB Update Offline Mode?
manualUpdate=false

# Directory for the local library. Can be absolute or relative path.
libraryDir=data

# Dimensions of the rendering window the client should render.
width=683
height=384
bpp=24
fullscreen=false
windowBorder=false

# Settings for rotation
# vwidth/vheight are the virtual screen that will be used instead of the actual screen
# Size acordingly
# vrotation is the angle in degrees to rotate. 90 would be a 90 degrees rotation clockwise.
vwidth=0
vheight=0
vrotation=0

# Xibo Server URL
xmdsUrl=http://change.to.your.server/xibo

# Should the client insist on seeing XMDS before playing cached content?
requireXMDS=true

# String used to generate a random client key. Can be empty if xmdsLicenseKey is specified.
xmdsClientID=insertRandomnessHere

# Raw license key for XMDS. If set, xmdsClientID is ignored.
xmdsLicenseKey=

# The client name to report back to XMDS when registering.
xmdsClientName=

# Xibo Server XMDS key
xmdsKey=test

# How often the client should collect new content from the server in seconds
xmdsUpdateInterval=300

# How many seconds should a socket connection take to timeout
# Set to blank not to use the system default. Note this must be blank if you're using the M2Crypto Python module
# in Ubuntu 10.04
socketTimeout=

# Should the client re-check previously OK media after a restart
checksumPreviousDownloads=false

# Should the client downsample images to use less video RAM
lowTextureMemory=true

# Force the client to achieve at least this many frames per second
fps=0

# Depricated: Should the client accept old style layout checksums?
backCompatLayoutChecksums=false

# Should the client send back Media Inventory to the server?
mediaInventory=true

# Should the client attempt to resume broken downloads?
resumeDownloads=true

# Should the client restart running layouts when receiving an update from USB stick?
interruptRunningMediaOnUpdate=false

# Mode for expiring layouts from the scheduler
# Mode 0 = Original Xibo Client - Layouts are not terminated at all until
#                                 they finish playing after their schedule
#                                 window has completed.
# Mode 1 = Terminate if running - Terminate the layout if it's running when
#                                 it goes out of it's schedule window, otherwise
#                                 silently remove it from the rotation.
# Mode 2 = Terminate on start   - Always terminate the running layout when a new
#                                 layout becomes valid in the rotation
# Mode 3 = Terminate on start   - Always terminate the running layout when a new
#                    or finish    layout becomes valid in the rotation or when the
#                                 current layout becomes invalid

layoutExpireMode=3

# What schedule should the client be allowed to update from the webservice on?
#
#   The time period specifications are reasonably straightforward, but
#   there are a few tricky bits. It understands the following time units:
#     * Hr00 - Hr23
#     * Min00 - Min59
#     * Yr1999, Yr2000, etc
#     * January, February, etc. and ranges February-September
#     * Monday, Tuesday, etc. and ranges Wednesday-Saturday
#     * Day01 - Day31
#     * Week00 - Week52
#     * Weekday, Weekend
#     * Always, Never
#
# See 3rdParty/period/period.txt for full documentation
# All statements are CASE SENSITIVE
# 
# Here's some common examples:
#
# Always connect:
connectionPeriod = Always

# Connect overnight only (18:00-06:59):
# connectionPeriod = Hr18-06

# Connect overnight weekends only (18:00-06:59):
# connectionPeriod = Weekend.Hr18-06

# Connect only on Sunday 12-1pm:
# connectionPeriod = Sunday.Hr12

# Should the client delete old media files that are no longer in use?
cleanOldMediaFiles=true

# How many days after a file is last used is it considered to be no longer in use?
mediaFileExpiry=28

[Logging]
logWriter=XiboLogXmds
splitLogWriter1=XiboLogXmds
splitLogWriter2=XiboLogScreen
logLevel=0

[Stats]
collect=false
queueSize=99

[TickerMedia]
dateFormat=%d/%m/%Y %H:%M


[Socket]
enabled=false

[VideoMedia]
# Loop videos automatically
loop=true

[LocalVideoMedia]
# Loop videos automatically
loop=true

[Lift]
serial0=/dev/ttyUSB0
serial1=/dev/ttyUSB1
serial2=/dev/ttyUSB2
serial3=/dev/ttyUSB3
trigger=3
enabled=false

[LiftTags]
lift0=switch1
lift1=switch2
lift2=switch3
lift3=switch4
lift4=switch5
lift5=switch6
lift6=switch7
lift7=switch8
lift8=switch9
lift9=switch10
lift10=switch11
lift11=switch12
lift12=switch13
lift13=switch14
lift14=switch15
lift15=switch16
default=default

[TicketCounter]
nextScanCode=117
resetScanCode=0
prevScanCode=112
minCount=1
maxCount=99
osdBackColour=000000
osdBackOpacity=0.8
osdFontSize=250
osdFontColour=ffffff
osdWidthPercent=30
osdTimeOut=5000

[ShellCommands]
# Allow shell commands to be executed at all by media items
# This can be dangerous as the client will execute any command
# sent from the server unless you prepare a whitelist below
enabled=false

# Comma separated list of commands it's OK to run
# exactly as they appear in the server interface (minus any options)
# eg /usr/bin/touch
whitelist=
